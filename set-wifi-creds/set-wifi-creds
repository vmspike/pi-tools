#!/bin/bash

##
# This script creates wifi configuration for wpa_supplicant based on file
# SRC_FILE (by default /boot/wifi) or on commandline arguments then write it
# to WPA_SUPPLICANT_FILE (by default
# /etc/wpa_supplicant/wpa_supplicant.IFACE.conf) and apply changes.
#
# SRC_FILE (if any) have to contain 1-3 lines:
# SSID
# password
# country
#
# If password is empty network considered unsecure.
# Country can contain two symbols of country abbreviation, see
# https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
# Country length truncated to two chars, so next chars if any are ignored.
# If country empty or invalid it drops to 00 (World).
#
# SRC_FILE if any will be removed after successful configuration.
#
# The script can be added to /etc/rc.local to check SRC_FILE on every boot.
#
# From command line SRC_FILE can be set by:
#   set-wifi-creds -f SRC_FILE
# alternativaly script can be called this way (optional args are in []):
#   set-wifi-creds IFACE SSID [PW] [COUNTRY] [WPA_SUPPLICANT_FILE]
# You may use empty strings '' if you don't want to set PW or COUNTRY but want to set WPA_SUPPLICANT_FILE.
#
# Also IFACE, SRC_FILE, WPA_SUPPLICANT_FILE can be set as an environmental variables.
##


## Default variables
[[ -z ${IFACE} ]] && IFACE=wlan0
[[ -z ${SRC_FILE} ]] && SRC_FILE='/boot/wifi'
[[ -z ${WPA_SUPPLICANT_FILE} ]] && WPA_SUPPLICANT_FILE="/etc/wpa_supplicant/wpa_supplicant.${IFACE}.conf"
## END Default variables

if [[ "$1" == '-f' && -f "$2" ]]; then
    SRC_FILE=$2
fi

if [[ -z "$1" || "$1" == '-f' ]]; then
    if ! [[ -f "${SRC_FILE}" ]]; then
        # echo "ERROR: No source file: ${SRC_FILE}" >&2
        exit 255
    fi

    ## Read variables
    {
    read -r SSID
    read -r PW
    read -r COUNTRY
    } <"${SRC_FILE}"

    ID_STR="Autogenerated WiFi network via set-wifi-creds script from file: ${SRC_FILE}"
else
    IFACE=$1
    SSID=$2
    PW=$3
    COUNTRY=$4
    [[ -n $5 ]] && WPA_SUPPLICANT_FILE=$5
    ID_STR="Autogenerated WiFi network via set-wifi-creds script using command line arguments"
    SRC_FILE=''
fi

## Remove trailing \r if any (required if file have been created on Windows)
SSID=${SSID%$'\r'}
PW=${PW%$'\r'}
COUNTRY=${COUNTRY::2}  # Force truncation to two chars
COUNTRY=${COUNTRY^^}  # Convert to upper case

if [[ -z ${SSID} ]]; then
    echo "ERROR: SSID have to be specified" >&2
    exit 1
fi

if [[ -z ${PW} ]]; then
    echo "WARNING: WiFi password is not specified, consider network unsecure." >&2
    OPTS='key_mgmt=NONE'
else
    OPTS='key_mgmt=WPA-PSK'
    ## Encrypt password
    PSK=$(wpa_passphrase "${SSID}" "${PW}" | grep -om1 -E '[0-9a-f]{64}')
    if (($?)); then
        echo "WARNING: Failed to encrypt password, put it as plaintext." >&2
        OPTS+=$'\n'"    psk=\"${PW}\""
    else
        OPTS+=$'\n'"    psk=${PSK}"
    fi
fi

## Set country for wifi if set and correct
if [[ "${COUNTRY}" =~ ^[A-Z][A-Z]$ ]]; then
    # sed -i "s/^country=[A-Z][A-Z]$/country=${COUNTRY}/" "${WPA_SUPPLICANT_FILE}"
    :
else
    echo "WARNING: Country is invalid or not set. Drop to 00 (World)." >&2
    COUNTRY='00'
fi

## Create config
read -rd '' CONF <<EOF
country=${COUNTRY}
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1

network={
    ssid="${SSID}"
    scan_ssid=1
    ${OPTS}
    priority=1
    id_str="${ID_STR}"
}
EOF

## Backup existing file
# shellcheck disable=SC2034
printf -v TS "%(%Y%m%d%H%M%S)T" '-1'  # Set timestamp
# shellcheck disable=SC1083
[[ -f "${WPA_SUPPLICANT_FILE}" ]] && mv -vfT "${WPA_SUPPLICANT_FILE}"{,.bak.${TS}}

## Write config
echo "${CONF}" >"${WPA_SUPPLICANT_FILE}"
echo "Content of ${WPA_SUPPLICANT_FILE}:"$'\n'"${CONF}"$'\n'

## Apply changes
echo -n 'Applying changes: '
wpa_cli -i "${IFACE}" reconfigure

if (($? == 0)); then
    # Remove initial config if reconfiguration successful
    [[ -n "${SRC_FILE}" ]] && rm -vf "${SRC_FILE}"
    echo 'WiFi credentials setup completed successfully.' >&2
    exit 0
else
    echo "WARNING: WiFi credentials setup completed, but changes applying failed. Maybe ${IFACE} was not configured to be WiFi client." >&2
    exit 1
fi
